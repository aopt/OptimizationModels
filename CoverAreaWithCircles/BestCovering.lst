GAMS 46.4.1  485757e2 Apr 16, 2024          WEX-WEI x86 64bit/MS Windows - 05/24/24 04:21:53 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


       
      Place 25 circles (size is endogenous) on a [0,250]x[0,100] square area such that
      circles don't overlap and the total area covered is maximized.
       
      Very tough little non-convex NLP.
       
                  Obj
      MultiStart  91.183   (1015 trials, w/o symmetry constraint)
      Baron       91.183   (no improvement, 1 hour, with symmetry breaker)
       
      Reference:
      https://yetanothermathprogrammingconsultant.blogspot.com/2024/05/another-very-small-but-very-difficult.html
       
  16   
  17  *-------------------------------------------------------------------
  18  * size of problem
  19  *-------------------------------------------------------------------
  20   
  21  Set i 'circles' /circle1*circle25/;
  22  alias (i,j);
  23   
  24  set ij(i,j) 'compare circles i and j: only i<j';
  25  ij(i,j) = ord(i) < ord(j);
  26   
  27  scalars
  28    sizeX 'size of area' /250/
  29    sizeY 'size of area' /100/
  30  ;
  31   
  32  *-------------------------------------------------------------------
  33  * NLP Model
  34  *-------------------------------------------------------------------
  35   
  36  positive variables
  37     x(i) 'x-coordinate'
  38     y(i) 'y-coordinate'
  39     r(i) 'radius'
  40  ;
  41   
  42  x.up(i) = sizeX;
  43  y.up(i) = sizeY;
  44  r.up(i) = min(sizeX,sizeY)/2;
  45   
  46  variable z 'covered area (% of area)';
  47   
  48  equations
  49      cover  'calculate total area covered'
  50      no_overlap(i,j) 'circles cannot overlap'
  51      xlo(i) 'stay inside [0,250]'
  52      xup(i) 'stay inside [0,250]'
  53      ylo(i) 'stay inside [0,100]'
  54      yup(i) 'stay inside [0,100]'
  55      symmetry(i) 'symmetry breaker'
  56  ;
  57   
  58   
  59  cover.. z =e= 100*sum(i, pi*sqr(r(i))) / (sizeX*sizeY);
  60  no_overlap(ij(i,j)).. sqr(x(i)-x(j)) + sqr(y(i)-y(j)) =g= sqr(r(i)+r(j));
  61  xlo(i).. x(i) - r(i) =g= 0;
  62  xup(i).. x(i) + r(i) =l= sizeX;
  63  ylo(i).. y(i) - r(i) =g= 0;
  64  yup(i).. y(i) + r(i) =l= sizeY;
  65  symmetry(i-1) .. r(i) =l= r(i-1);
  66   
  67   
  68  * improves logging of gap, but may slow things down
  69  * (nl obj becomes a constraint)
  70  z.up = 100;
  71   
  72   
  73  model circlesw  'with symmetry' /all/ ;
  74  model circleswo 'w/o symmetry' /circlesw - symmetry/ ;
  75   
  76   
  77  *-------------------------------------------------------------------
  78  * select algorithm
  79  *-------------------------------------------------------------------
  80   
  83   
  84   
  85  *-------------------------------------------------------------------
  86  * multistart approach using local NLP solver
  87  * best used without symmetry breaker
  88  * we get a solution:  91.183 @ trial1015
  89  *-------------------------------------------------------------------
  90   
  92   
  93  set k /trial1*trial1015/;
  94  option qcp = conopt;
  95  parameter best(i,*) 'best solution';
  96  scalar zbest 'best objective' /0/;
  97  parameter trace(k) 'keep track of improvements';
  98  circleswo.solprint = 2;
  99  circleswo.solvelink = 5;
 100  * abort expensive solves
 101  option reslim = 10;
 102  loop(k,
 103       x.l(i) = uniform(10,sizeX-10);
 104       y.l(i) = uniform(10,sizeY-10);
 105       r.l(i) = uniform(10,40);
 106   
 107       solve circleswo maximizing z using qcp;
 108       if(circleswo.modelstat=2 and z.l>zbest,
 109           zbest = z.l;
 110           best(i,'x') = x.l(i);
 111           best(i,'y') = y.l(i);
 112           best(i,'r') = r.l(i);
 113           trace(k) = z.l;
 114      );
 115   );
 116   
 117  display zbest,best,trace;
 118   
 119  * ugly code to sort on r so we can use symmetry constraint in
 120  * subsequent solve.
 121  set rem(i) 'remaining';
 122  rem(i) = yes;
 123  option strictSingleton = 0;
 124  singleton set cur(i) 'current';
 125  scalar largest;
 126  loop(i,
 127     largest = smax(rem,best(rem,'r'));
 128     cur(rem) = best(rem,'r')=largest;
 129     x.l(i) = best(cur,'x');
 130     y.l(i) = best(cur,'y');
 131     r.l(i) = best(cur,'r');
 132     rem(cur) = no;
 133  );
 134  z.l = zbest;
 135   
 136  * reset to default for next solves
 137  circleswo.solprint = 1;
 138   
 139   
 141   
 142   
 143  *-------------------------------------------------------------------
 144  * Global NLP solver
 145  * with or without symmetry breaker
 146  *-------------------------------------------------------------------
 147   
 149   
 150  *-------------------------------------------------------------------
 151  * Reporting
 152  *-------------------------------------------------------------------
 153   
 154  display z.l;
 155   
 156  parameter results(i,*);
 157  results(i,'x') = x.l(i);
 158  results(i,'y') = y.l(i);
 159  results(i,'r') = r.l(i);
 160  display results;
 161   


COMPILATION TIME     =        0.000 SECONDS      3 MB  46.4.1 485757e2 WEX-WEI
GAMS 46.4.1  485757e2 Apr 16, 2024          WEX-WEI x86 64bit/MS Windows - 05/24/24 04:21:53 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    117 PARAMETER zbest                =       91.183  best objective

----    117 PARAMETER best  best solution

                   x           y           r

circle1       92.857       9.184       9.184
circle2      155.405      21.284       3.041
circle3        2.566      72.654       2.566
circle4      170.000       4.500       4.500
circle5       90.000      92.000       8.000
circle6      142.308      73.077       3.846
circle7      166.667      94.444       5.556
circle8      241.421      91.421       8.579
circle9      200.000      50.000      50.000
circle10     150.000      87.500      12.500
circle11      80.000       4.500       4.500
circle12     245.711      20.711       4.289
circle13      50.000      50.000      50.000
circle14     142.308      60.577       8.654
circle15       8.579      91.421       8.579
circle16      78.571      95.918       4.082
circle17     104.545      53.766       4.675
circle18       8.579       8.579       8.579
circle19     241.421       8.579       8.579
circle20     157.143       9.184       9.184
circle21     125.000      28.125      28.125
circle22     116.667      77.778      22.222
circle23       4.289      20.711       4.289
circle24       4.289      79.289       4.289
circle25     150.000      70.833       4.167


----    117 PARAMETER trace  keep track of improvements

trial1    85.363,    trial2    85.917,    trial3    86.075,    trial4    87.942,    trial10   89.138,    trial30   90.951
trial1015 91.183


----    154 VARIABLE z.L                   =       91.183  covered area (% of area)

----    160 PARAMETER results  

                   x           y           r

circle1      200.000      50.000      50.000
circle2       50.000      50.000      50.000
circle3      125.000      28.125      28.125
circle4      116.667      77.778      22.222
circle5      150.000      87.500      12.500
circle6       92.857       9.184       9.184
circle7      157.143       9.184       9.184
circle8      142.308      60.577       8.654
circle9        8.579      91.421       8.579
circle10     241.421       8.579       8.579
circle11     241.421      91.421       8.579
circle12       8.579       8.579       8.579
circle13      90.000      92.000       8.000
circle14     166.667      94.444       5.556
circle15     104.545      53.766       4.675
circle16      80.000       4.500       4.500
circle17     170.000       4.500       4.500
circle18       4.289      20.711       4.289
circle19     245.711      20.711       4.289
circle20       4.289      79.289       4.289
circle21     150.000      70.833       4.167
circle22      78.571      95.918       4.082
circle23     142.308      73.077       3.846
circle24     155.405      21.284       3.041
circle25       2.566      72.654       2.566



USER: Eval License                                   G231201|0002CO-GEN
      Amsterdam Optimization Modeling Group,                     DCE378


**** FILE SUMMARY

Input      C:\projects\OptimizationModels\CoverAreaWithCircles\BestCovering.gms
Output     C:\projects\OptimizationModels\CoverAreaWithCircles\BestCovering.lst
