GAMS 46.4.1  485757e2 Apr 16, 2024          WEX-WEI x86 64bit/MS Windows - 05/22/24 04:25:34 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


       
       
       Problem
       We have a number of overlapping circles. We want to move around
       a bit (as little as possible) to make them non-overlapping.
       
       This is a nonconvex problem.
       
  11   
  12   
  13  *-------------------------------------------------------------------
  14  * size of problem
  15  *-------------------------------------------------------------------
  16   
  17  set i /circle1*circle10/;
  18  alias(i,j);
  19   
  20  set ij(i,j) 'i<j';
  21  ij(i,j) = ord(i) < ord(j);
  22   
  23  table bounds(*,*) 'limits for (x0,y0) and (x,y)'
  24          min  max
  25    x0   -100  100
  26    y0   -100  100
  27    r     10   50
  28    x    -200  200
  29    y    -200  200
  30  ;
  31   
  32  * (x0,y0) and r are data
  33  * (x,y) are variables
  34   
  35   
  36  *-------------------------------------------------------------------
  37  * data
  38  *-------------------------------------------------------------------
  39   
  40  Parameter
  41     x0(i)  'prior x-coordinate'
  42     y0(i)  'prior y-coordinate'
  43     r(i)   'radius'
  44     d(i,*) 'reporting of data+results'
  45  ;
  46  x0(i) = uniform(bounds('x0','min'),bounds('x0','max'));
  47  y0(i) = uniform(bounds('y0','min'),bounds('y0','max'));
  48  r(i) = uniform(bounds('r','min'),bounds('r','max'));
  49   
  50  d(i,'x0') = x0(i);
  51  d(i,'y0') = y0(i);
  52  d(i,'r') = r(i);
  53  display d;
  54   
  55  *-------------------------------------------------------------------
  56  * model
  57  *-------------------------------------------------------------------
  58   
  59  variables
  60    x(i) 'new x-coordinates'
  61    y(i) 'new y-coordinates'
  62    z 'objective: sum of squared distances'
  63  ;
  64   
  65  * for global NLPs it is always advised to
  66  * to use proper bounds on all variables
  67  x.lo(i) = bounds('x','min');
  68  x.up(i) = bounds('x','max');
  69  y.lo(i) = bounds('y','min');
  70  y.up(i) = bounds('y','max');
  71   
  72   
  73  Equations
  74     obj     'objective: (x,y) as close as possible to (x0,y0)'
  75     no_overlap(i,j) 'circles i and j should not overlap (non-convex costraint)'
  76  ;
  77   
  78  obj..
  79     z =e= sum(i, sqr(x(i)-x0(i)) + sqr(y(i)-y0(i)));
  80   
  81  no_overlap(ij(i,j))..
  82     sqr(x(i)-x(j)) + sqr(y(i)-y(j)) =g= sqr(r(i)+r(j));
  83   
  84  model move /all/;
  85   
  86  *-------------------------------------------------------------------
  87  * select algorithm
  88  *-------------------------------------------------------------------
  89   
  92   
  93   
  94  *-------------------------------------------------------------------
  95  * multistart approach using local NLP solver
  96  * best used without symmetry breaker
  97  * we get a solution:  91.183 @ trial1015
  98  *-------------------------------------------------------------------
  99   
 101   
 102  set k /trial1*trial25/;
 103  option qcp = conopt;
 104  parameter best(i,*) 'best solution';
 105  scalar zbest 'best objective' /INF/;
 106  parameter trace(k) 'keep track of improvements';
 107  move.solprint = 2;
 108  move.solvelink = 5;
 109  loop(k,
 110       x.l(i) = uniform(bounds('x','min')+10,bounds('x','max')-10);
 111       y.l(i) = uniform(bounds('y','min')+10,bounds('y','max')-10);
 112   
 113       solve move minimizing z using qcp;
 114       if(z.l<zbest,
 115           zbest = z.l;
 116           best(i,'x') = x.l(i);
 117           best(i,'y') = y.l(i);
 118           trace(k) = z.l;
 119      );
 120   );
 121   
 122  display zbest,best,trace;
 123   
 124  x.l(i) = best(i,'x');
 125  y.l(i) = best(i,'y');
 126   
 127   
 128  * reset to default for next solves
 129  move.solprint = 1;
 130   
 132   
 133   
 134  *-------------------------------------------------------------------
 135  * Global NLP solver
 136  * with or without symmetry breaker
 137  *-------------------------------------------------------------------
 138   
 140   
 141  *-------------------------------------------------------------------
 142  * reporting
 143  *-------------------------------------------------------------------
 144   
 145  d(i,'x') = x.l(i);
 146  d(i,'y') = y.l(i);
 147  d(i,'sq.dist') = sqr(x.l(i)-x0(i)) + sqr(y.l(i)-y0(i));
 148  display d;


COMPILATION TIME     =        0.000 SECONDS      3 MB  46.4.1 485757e2 WEX-WEI
GAMS 46.4.1  485757e2 Apr 16, 2024          WEX-WEI x86 64bit/MS Windows - 05/22/24 04:25:34 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----     53 PARAMETER d  reporting of data+results

                  x0          y0           r

circle1      -65.651      99.624      24.388
circle2       68.653      15.747      24.058
circle3       10.075      98.227      15.260
circle4      -39.772      52.450      16.004
circle5      -41.558     -73.862      33.565
circle6      -55.189      27.944      43.236
circle7      -30.034     -68.096      19.233
circle8       71.254     -49.984      36.629
circle9      -86.577      33.786      41.034
circle10       0.042     -12.929      22.146

----    122 PARAMETER zbest                =     2979.161  best objective

----    122 PARAMETER best  best solution

                   x           y

circle1      -65.651      99.624
circle2       68.653      15.747
circle3       10.075      98.227
circle4      -38.592      62.852
circle5      -59.405     -82.790
circle6      -45.271       3.990
circle7      -12.187     -59.168
circle8       71.254     -49.984
circle9     -113.615      53.289
circle10      15.981     -18.880


----    122 PARAMETER trace  keep track of improvements

trial1 2979.161,    trial2 2979.161,    trial9 2979.161


----    148 PARAMETER d  reporting of data+results

                  x0          y0           r           x           y     sq.dist

circle1      -65.651      99.624      24.388     -65.651      99.624 6.03409E-20
circle2       68.653      15.747      24.058      68.653      15.747 2.08973E-20
circle3       10.075      98.227      15.260      10.075      98.227 1.12700E-25
circle4      -39.772      52.450      16.004     -38.592      62.852     109.588
circle5      -41.558     -73.862      33.565     -59.405     -82.790     398.239
circle6      -55.189      27.944      43.236     -45.271       3.990     672.181
circle7      -30.034     -68.096      19.233     -12.187     -59.168     398.239
circle8       71.254     -49.984      36.629      71.254     -49.984 1.04104E-20
circle9      -86.577      33.786      41.034    -113.615      53.289    1111.443
circle10       0.042     -12.929      22.146      15.981     -18.880     289.471



USER: Eval License                                   G231201|0002CO-GEN
      Amsterdam Optimization Modeling Group,                     DCE378


**** FILE SUMMARY

Input      C:\projects\OptimizationModels\OverlappingCircles\overlappingCircles.gms
Output     C:\projects\OptimizationModels\OverlappingCircles\overlappingCircles.lst
